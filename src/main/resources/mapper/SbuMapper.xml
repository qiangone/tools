<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capgemini.university.dao.SbuDao">

	<select id="getSbu" parameterType="map" resultMap="sbuMap">

		select
		a.id,
		a.sbu_name,
		a.parent_id,
		b.id sbu_lbps_id,
		c.id l_id,
		c.name l_name,
		c.email l_email,
		c.role l_role
		from sbu a left join sbu_lbps b on
		a.id=b.sbu_id
		left join lbps c
		on b.lbps_id=c.id
		where 1=1


		<if test="id != null">
			and a.id = #{id}
		</if>
		<if test="lbps != null">
			and c.name=#{lbps}
		</if>
		<if test="email != null">
			and c.email=#{email}
		</if>

		<if test="parentId != null">
			and a.parent_id = #{parentId}
		</if>
		
		<if test="sbuName != null">
			and a.sbu_name = #{sbuName}
		</if>
		and a.tag=0
	</select>

	<select id="getLbps" parameterType="map" resultMap="lbpsMap">

		select
		id,
		name,
		email,
		role
		
		from lbps 
	
		where 1=1


		<if test="id != null">
			and id = #{id}
		</if>
		
		<if test="email != null">
			and email=#{email}
		</if>

		
	</select>
	
	
	
	<select id="getSbuLbps" parameterType="map" resultMap="sbulbpsMap">

		select
		id,
		sbu_id,
		lbps_id
		from sbu_lbps 
		where 1=1
		
		<if test="id != null">
			and id=#{id}
		</if>
		
		<if test="sbuId != null">
			and sbu_id=#{sbuId}
		</if>
		
		<if test="lbpsId != null">
			and lbps_id=#{lbpsId}
		</if>

	</select>


	<select id="countSeatsOfOtherSbu" parameterType="map"
		resultType="map">

		select
		a.id,
		a.sbu_name,
		b.course_id,
		b.seats,
		b.assign_seats
		from sbu a left join sbu_course
		b on a.id=b.sbu_id
		where 1=1

		and
		b.course_id = #{courseId}

		and a.id != #{sbuId}
		and a.parent_id=0
		and
		a.tag=0
		order by
		a.id

	</select>



	<select id="countSwapSeatsOfOtherSbu" parameterType="map"
		resultType="map">

		select
		a.id sbu_id,
		a.sbu_name,
		b.course_id,
		b.swap_seats
		from
		sbu a left join sbu_course
		b on a.id=b.sbu_id
		where 1=1

		and
		b.course_id =
		#{courseId}

		and a.id != #{sbuId}
		and a.parent_id=0
		and b.swap_seats>0
		and
		a.tag=0
		order by a.id

	</select>


	<select id="countSeatsOfSubSbu" parameterType="map" resultType="map">

		select
		a.id,
		a.sbu_name,
		#{courseId} courseId,
		ifnull(b.seats,0) seats
		from sbu a left join sbu_course b on a.id=b.sbu_id and b.course_id=
		#{courseId}
		where 1=1

		and a.parent_id = #{sbuId}
		and a.tag=0



	</select>

	<select id="countParticipantsOfSbu" parameterType="map"
		resultType="map">

		select
		c.sbu_name,
		d.name course_name,
		d.start_time,
		d.end_time,
		b.participant_email email,
		b.participant_dispaly_name display_name
		from
		sbu_course a left join course_participant b on a.sbu_id= b.sbu_id and
		a.course_id=b.course_id
		left join sbu c on a.sbu_id=c.id
		left join
		course d on a.course_id=d.id
		where 1=1
		<if test="sbuId != null">
			and a.sbu_id=#{sbuId}
		</if>
		<if test="eventName != null">
			and	d.event_name=#{eventName}
			</if>
		
		order by a.sbu_id,a.course_id



	</select>
	
	<select id="countParticipantsByCourse" parameterType="map" resultMap="sbuMapWithPartic">

		select 
		t.*,
		c.id part_id,
		c.participant_email,
		c.participant_dispaly_name,
		c.attend
		from
		(
		select 
		a.id,
		a.sbu_name
		from sbu a
		where a.parent_id=0
		and a.tag=0
		)t left join sbu b on t.id = b.parent_id
		left join course_participant c on b.id = c.sbu_id and c.course_id=#{courseId};



	</select>
	

	<update id="updateSbuLbps" parameterType="com.capgemini.university.model.SbuLbps">
		update sbu_lbps

		<set>
			<if test="lbpsId != null">
				lbps_id=#{lbpsId},
			</if>
			
		</set>

		where id = #{id}



	</update>

	<update id="updateSbu" parameterType="com.capgemini.university.model.Sbu">
		update sbu

		<set>
			<if test="subName != null">
				sbu_name=#{subName},
			</if>
			<if test="tag != null">
				tag=#{tag},
			</if>
		</set>

		where id = #{id}



	</update>

	<update id="updateLbps" parameterType="com.capgemini.university.model.Lbps">
		update lbps

		<set>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="email != null">
				email=#{email},
			</if>
			
		</set>

		where id = #{id}



	</update>



	<insert id="addSbu" parameterType="com.capgemini.university.model.Sbu">

		insert into sbu
		(
		sbu_name,
		parent_id
		)
		values(
		#{subName},
		#{parentId}

		)
		<selectKey resultType="int" order="AFTER" keyProperty="id">
			select LAST_INSERT_ID() AS id
		</selectKey>

	</insert>

	<insert id="addLbps" parameterType="com.capgemini.university.model.Lbps">

		insert into lbps
		(
		name,
		email
		)
		values(
		#{name},
		#{email}

		)
		<selectKey resultType="int" order="AFTER" keyProperty="id">
			select LAST_INSERT_ID() AS id
		</selectKey>

	</insert>

	<insert id="addSbuLbps" parameterType="com.capgemini.university.model.SbuLbps">

		insert into sbu_lbps
		(
		sbu_id,
		lbps_id
		)
		values(
		#{sbuId},
		#{lbpsId}

		)
		<selectKey resultType="int" order="AFTER" keyProperty="id">
			select LAST_INSERT_ID() AS id
		</selectKey>

	</insert>
	
	
	 <select id="convertToFreeSeats"  statementType="CALLABLE"  > 
	    {
	     call sp_convert_to_free_seats()
	    }
	    
	  </select>
	
	 <select id="countParticipantAndPmds" parameterType="java.util.Map" statementType="CALLABLE"  resultMap="seatsMap" > 
	    {
	     call sp_count_participant_pmds(
	     #{sbuId,jdbcType=VARCHAR,mode=IN}
	    
	     
	     )
	     
	    }
	    
	  </select>
  
    <resultMap type="java.util.HashMap" id="seatsMap">
      <result column="used_seats" property="used_seats" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <result column="used_pmds" property="used_pmds" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <result column="avaliable_seats" property="avaliable_seats" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <result column="avaliable_pmds" property="avaliable_pmds" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <result column="lost_seats" property="lost_seats" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <result column="lost_pmds" property="lost_pmds" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>



	<resultMap id="sbuMap" type="com.capgemini.university.model.Sbu">
		<result property="id" column="id" />
		<result property="subName" column="sbu_name" />
		<!-- <result property="lbps" column="lbps" /> <result property="email" 
			column="email" /> -->
		<result property="parentId" column="parent_id" />
<result property="sbuLbpsId" column="sbu_lbps_id" />
		<association property="lbps"
			javaType="com.capgemini.university.model.Lbps">
			<result property="id" column="l_id" />
			<result property="name" column="l_name" />
			<result property="email" column="l_email" />
			<result property="role" column="l_role" />
		</association>
		
		
		


	</resultMap>
	
	
	<resultMap id="sbuMapWithPartic" type="com.capgemini.university.model.Sbu">
		<result property="id" column="id" />
		<result property="subName" column="sbu_name" />
		

	
		<collection property="participantList" ofType="com.capgemini.university.model.Participant">
			<result property="id" column="part_id" />
				<result property="email" column="participant_email" />
			<result property="displayName" column="participant_dispaly_name" />
			<result property="attend" column="attend" />
			
		</collection>


	</resultMap>
	



	<resultMap id="lbpsMap" type="com.capgemini.university.model.Lbps">
		<result property="id" column="l_id" />
			<result property="name" column="l_name" />
			<result property="email" column="l_email" />
			<result property="role" column="l_role" />

	</resultMap>
	
		<resultMap id="sbulbpsMap" type="com.capgemini.university.model.SbuLbps">
			<result property="id" column="id" />
			<result property="sbuId" column="sbu_id" />
			<result property="lbpsId" column="lbps_id" />

	</resultMap>
	





</mapper>